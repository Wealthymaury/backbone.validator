/* 
 * Backbone Validator v0.5 
 * 
 * por: Mauricio Manjarrez Magall√≥n, @wealthymaury 
 * Minified on Thu Sep 03 2015 12:37:22 
 */
window.Validator={};Validator.Lang={};Validator.Config={debug:false,lang:"en-us"};try{_;Backbone}catch(error){throw new Error(error.message)}Validator.Lang["en-us"]={fields:{},messages:{required:"The field is required.",string:"The field must be a text.","boolean":"The field must be True or False.",integer:"The field must be an integer.","in":"The field must be in: :arg1.",not_in:"The :field field must not be in: :arg1.",array:"The field must be an array.",min:"The field must be at least: :arg1.",minLength:"The field must be at least a length of :arg1.",max:"The field may not be greater than: :arg1.",maxLength:"The field length may not be greater than: :arg1.",between:"The field must be between: :arg1 y :arg2.",betweenLength:"The field length must be between: :arg1 y :arg2 catacters.",length:"The field length must be: :arg1.",same:"The :field field must be same to :field_eq.",different:"The :field field must be different to :field_eq.",confirmed:"The confirmation does not match.",exists:"The :value :field is not registred into :collection list.",unique:"The :value :field is already registred into :collection list.",email:"The format is not a valid email.",mimes:"The file format is not valid.",regex:"The format is not valid.",date:"The format is not valid, must be a date.",before:"The date must be before to :arg1.",after:"The date must be after to :arg1."},info:{start_validation:"Start validation for: ",end_validation:"End validation for: ",validated:"Validated: ",result:"Result: ",success:"Success."},validations:{invalid_field:"The :field field is not defined in model.",invalid_collection:"The :collection collection is not defined.",numeric_args:":function : Arguments must be numeric.",required_arg:":function : must pass at least one parameter to validation].",required_args:":function : must pass :num parameters to validation.",invalid_rule:"the :rule rule is not defined.",except_format:"Except into unique rule must be an Integet idenfirier",invalid_date:":function : Argument must be date."}};var info=function(a){if(Validator.Config.debug==true){console.info(a)}};var emailValid=function(a){expr=/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;if(!expr.test(a))return false;return true};var getMessage=function(a,b){b=b.toString();var c=Validator.Config.lang;var d=Validator.Lang[c][a][b];if(b.indexOf("id")!=-1&&d==undefined){d="Identificador"}if(d==undefined){d=b.substr(0,1).toUpperCase()+b.substr(1)}return d};var arrayStringsToInts=function(a){for(var b=0;b<a.length;b++)a[b]=+a[b];return a};_.extend(Backbone.Model.prototype,{validate:function(a,b){if(this.validation==true){var c={};var d={};var e=_.map(this.validatorRules,this.makeValidation,this);if(typeof this.moreValidations=="function"){d=this.moreValidations()}if(!_.isEmpty(e)){for(var f=0;f<=e.length;f++){_.extend(c,e[f])}}if(d!==undefined){_.each(d,function(a,b,c){if(this.hasOwnProperty(b)){for(f in a){this[b].push(a[f])}}else{this[b]=a}},c)}if(!_.isEmpty(c)){info("Errores al validar: "+JSON.stringify(c));return c}}},makeValidation:function(rules,field_r,list){if(rules=="")return;var errors={};var arrRules=rules.split("|");var field="'"+field_r+"'";for(i in arrRules){var rule=arrRules[i];var parts=rule.split(":");if(typeof eval("this."+parts[0])=="undefined"){throw new SyntaxError(getMessage("validations","invalid_rule").replace(":rule",parts[0]))}var expBase=parts[0]+"(*);";var args="";if(parts[1]!==undefined){parts[1]=parts[1].replace(/,/gi,"','");args=",'"+parts[1]+"'"}args=args.replace(",''","");expBase=expBase.replace("*",field+args);var exp="this."+expBase;var error=eval(exp);if(error!==undefined){errors[field_r]=errors[field_r]||new Array;errors[field_r].push(error)}}return errors},required:function(a){if(this.get(a)===""||this.get(a)===null||this.get(a)===undefined){return getMessage("messages","required")}},string:function(a){if(typeof this.get(a)!=="string"){return getMessage("messages","string")}},integer:function(a){if(typeof this.get(a)!=="number"){return getMessage("messages","integer")}},"in":function(a){this.validateArguments(arguments,"in");var b=this.get(a);var c=this.argsWithoutFirst(arguments);var d=c.indexOf(b+"");if(d===-1){return getMessage("messages","in").replace(":arg1",c.toString().replace(",",", "))}},not_in:function(a){this.validateArguments(arguments,"not_in");var b=this.get(a);var c=this.argsWithoutFirst(arguments);var d=c.indexOf(b+"");if(d!==-1){return getMessage("messages","not_in").replace(":arg1",c.toString().replace(",",", "))}},array:function(a){if(this.get(a)instanceof Array==false){return getMessage("messages","array")}},min:function(a){this.validateArguments(arguments,"min");this.validateArgumentsNumeric(this.argsWithoutFirst(arguments),"min");if(typeof this.get(a)!=="number"||+this.get(a)<+arguments[1]){return getMessage("messages","min").replace(":arg1",arguments[1])}},minLength:function(a){this.validateArguments(arguments,"minLength");if(this.get(a).toString().length<+arguments[1]){return getMessage("messages","minLength").replace(":arg1",arguments[1])}},max:function(a){this.validateArguments(arguments,"max");this.validateArgumentsNumeric(this.argsWithoutFirst(arguments),"max");if(typeof this.get(a)!=="number"||+this.get(a)>+arguments[1]){return getMessage("messages","max").replace(":arg1",arguments[1])}},maxLength:function(a){this.validateArguments(arguments,"maxLength");if(this.get(a).toString().length>+arguments[1]){return getMessage("messages","maxLength").replace(":arg1",arguments[1])}},between:function(a){this.validateArguments(arguments,"between",2);this.validateArgumentsNumeric(this.argsWithoutFirst(arguments),"between");if(+this.get(a)<+arguments[1]||+this.get(a)>+arguments[2]){return getMessage("messages","between").replace(":arg1",arguments[1]).replace(":arg2",arguments[2])}},betweenLength:function(a){this.validateArguments(arguments,"betweenLength",2);this.validateArgumentsNumeric(this.argsWithoutFirst(arguments),"between");if(this.get(a).toString().length<+arguments[1]||this.get(a).toString().length>+arguments[2]){return getMessage("messages","betweenLength").replace(":arg1",arguments[1]).replace(":arg2",arguments[2])}},length:function(a,b){this.validateArguments(arguments,"length");if(this.get(a).toString().length!==+arguments[1]){return getMessage("messages","length").replace(":arg1",arguments[1])}},exists:function(field,collection_name,collection_field){var collection="window.collections."+collection_name;this.collectionDefined(collection);var value=this.get(field);var real_collection=eval(collection);var results=eval("real_collection.where({"+collection_field+": value})");if(results.length==0){return getMessage("messages","exists").replace(":value",value).replace(":field",getMessage("fields",field)).replace(":collection",getMessage("fields",collection_name))}},unique:function(field,collection_name,collection_field,except){var collection="window.collections."+collection_name;this.collectionDefined(collection);var value=this.get(field);var real_collection=eval(collection);var results=eval("real_collection.where({"+collection_field+": value})");if(results.length>0){if(except!=undefined){except=parseInt(except);if(typeof except!=="number"){throw new SyntaxError(getMessage("validations","except_format"))}else{if(results[0].id===except){return}}}return getMessage("messages","unique").replace(":value",value).replace(":field",getMessage("fields",field)).replace(":collection",getMessage("fields",collection_name))}},confirmed:function(a){this.fieldDefined(a);this.fieldDefined(a+"_confirmation");var b=this.get(a);var c=a+"_confirmation";var d=this.get(c);if(b!==d){return getMessage("messages","confirmed")}},same:function(a,b){this.fieldDefined(a);this.fieldDefined(b);if(this.get(a)!=this.get(b)){return getMessage("messages","same").replace(":field",getMessage("fields",a)).replace(":field_eq",getMessage("fields",b))}},different:function(a,b){this.fieldDefined(a);this.fieldDefined(b);if(this.get(a)==this.get(b)){return getMessage("messages","different").replace(":field",getMessage("fields",a)).replace(":field_eq",getMessage("fields",b))}},"boolean":function(a){if(typeof this.get(a)!=="boolean"){return getMessage("messages","boolean")}},email:function(a){if(!emailValid(this.get(a))){return getMessage("messages","email")}},mimes:function(a){this.validateArguments(arguments,"mimes");var b=this.argsWithoutFirst(arguments);var c=this.get(a).indexOf("/")+1;var d=this.get(a).indexOf(";");var e=this.get(a).substring(c,d);if(b.indexOf(e)===-1){return getMessage("messages","mimes")}},date:function(a){if(isNaN(Date.parse(this.get(a)))){return getMessage("messages","date")}},after:function(a,b){var c=Date.parse(this.get(a));var d=parseInt(b);var e=Date.parse(b);if(isNaN(parseInt(e))){throw getMessage("validations","invalid_date").replace(":function","after")}if(isNaN(c)||c<=e){return getMessage("messages","after").replace(":arg1",b)}},before:function(a,b){var c=Date.parse(this.get(a));var d=parseInt(b);var e=Date.parse(b);if(isNaN(parseInt(e))){throw getMessage("validations","invalid_date").replace(":function","after")}if(isNaN(c)||c>=e){return getMessage("messages","before").replace(":arg1",b)}},argsToArray:function(a){var b=new Array;for(i in a){b.push(a[i])}return b},argsWithoutFirst:function(a){var b=this.argsToArray(a);return b.slice(1,b.length)},validateArguments:function(a,b,c){if(a.length<2||a.length==2&&a[1]==""){throw new SyntaxError(getMessage("validations","required_arg").replace(":function",b))}if(c!==undefined){if(a.length-1<c){throw new SyntaxError(getMessage("validations","required_args").replace(":function",b).replace(":num",c))}}},validateArgumentsNumeric:function(a,b){for(i in a){if(typeof parseInt(a[i])!=="number"||isNaN(parseInt(a[i]))){throw new SyntaxError(getMessage("validations","numeric_args").replace(":function",b))}}},fieldDefined:function(a){var b=getMessage("fields",a);if(this.get(a)==undefined){throw getMessage("validations","invalid_field").replace(":field",b==undefined?a+":not_in_lang":b)}},collectionDefined:function(collection){if(eval(collection)==undefined){throw getMessage("validations","invalid_collection").replace(":collection",collection_name)}}});